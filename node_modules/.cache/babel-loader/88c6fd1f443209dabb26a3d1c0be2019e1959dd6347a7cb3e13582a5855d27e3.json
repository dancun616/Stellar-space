{"ast":null,"code":"var _jsxFileName = \"/home/danny/stellar-space/src/components/weather/AboutMars.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport './weather.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AboutMars(props) {\n  _s();\n  const [sol_hours, setSol_Hours] = useState([]);\n  const [solRequired, setSol_Required] = useState([]);\n  const [solChecked, setSol_Checked] = useState([]);\n\n  // fetching from api\n  useEffect(() => {\n    fetch(\"https://api.nasa.gov/insight_weather/?api_key=fzSdG2XbOJj2lUZxdX3IBaW0nzQGpjVRId40l7C1&feedtype=json&ver=1.0\").then(r => r.json()).then(data => {\n      console.log(data);\n      const customData = data.validity_checks[\"1219\"];\n      const hoursData = data.validity_checks;\n      setSol_Hours(customData.AT.sol_hours_with_data);\n      setSol_Hours(customData.HWS.sol_hours_with_data);\n      setSol_Hours(customData.PRE.sol_hours_with_data);\n      setSol_Hours(customData.WD.sol_hours_with_data);\n      const requiredData = data.validity_checks;\n      setSol_Required(hoursData.sol_hours_required);\n      const checkedData = data.validity_checks;\n      setSol_Checked(hoursData.sols_checked);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mars-weather\",\n    children: /*#__PURE__*/_jsxDEV(\"center\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"weather-title\",\n        children: \"Mars weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Row\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"ATMOSPHERIC TEMPERATURE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), sol_hours.map(soul => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [soul, \"\\xB0C\"]\n        }, soul, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Row\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"HORIZONTAL WIND SPEED\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), sol_hours.map(soul => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [soul, \"Kph\"]\n        }, soul, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Row\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"ATMOSPHERIC PRESSURE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), sol_hours.map(soul => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [soul, \"Hg\"]\n        }, soul, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Row\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"WIND DIRECTION\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), sol_hours.map(soul => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: soul\n        }, soul, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(AboutMars, \"soAf6Jvq6AMqD7Z1ddtTTl0TsaY=\");\n_c = AboutMars;\nexport default AboutMars;\nvar _c;\n$RefreshReg$(_c, \"AboutMars\");","map":{"version":3,"names":["React","useEffect","useState","AboutMars","props","sol_hours","setSol_Hours","solRequired","setSol_Required","solChecked","setSol_Checked","fetch","then","r","json","data","console","log","customData","validity_checks","hoursData","AT","sol_hours_with_data","HWS","PRE","WD","requiredData","sol_hours_required","checkedData","sols_checked","map","soul"],"sources":["/home/danny/stellar-space/src/components/weather/AboutMars.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport './weather.css';\n\nfunction AboutMars(props) {\n  const [sol_hours, setSol_Hours] = useState([]);\n  const [solRequired, setSol_Required] = useState([]);\n  const [solChecked, setSol_Checked] = useState([]);\n\n\n  // fetching from api\n  useEffect(\n    () => {\n      fetch(\n        \"https://api.nasa.gov/insight_weather/?api_key=fzSdG2XbOJj2lUZxdX3IBaW0nzQGpjVRId40l7C1&feedtype=json&ver=1.0\"\n      )\n        .then((r) => r.json())\n        .then((data) => {\n          console.log(data);\n          const customData = data.validity_checks[\"1219\"];\n          const hoursData = data.validity_checks;\n\n          setSol_Hours(customData.AT.sol_hours_with_data);\n          setSol_Hours(customData.HWS.sol_hours_with_data);\n          setSol_Hours(customData.PRE.sol_hours_with_data);\n          setSol_Hours(customData.WD.sol_hours_with_data);\n\n          const requiredData = data.validity_checks;\n\n          setSol_Required(hoursData.sol_hours_required);\n\n          const checkedData = data.validity_checks;\n          setSol_Checked(hoursData.sols_checked);\n        });\n    },\n    []\n  );\n\n  return (\n  \n    <div className=\"mars-weather\">\n  <center>\n    <h2 className=\"weather-title\">Mars weather</h2>\n          <div className=\"Row\">\n            <h4 >ATMOSPHERIC TEMPERATURE</h4>\n            {sol_hours.map(soul => (\n              <p key={soul}>{soul}Â°C</p>\n            ))}\n          </div>\n\n          <div className=\"Row\">\n          <h4>HORIZONTAL WIND SPEED</h4>\n            {sol_hours.map(soul => (\n              <p key={soul}>{soul}Kph</p>\n            ))}\n          </div>\n\n          <div className=\"Row\">\n        <h4>ATMOSPHERIC PRESSURE</h4>\n            {sol_hours.map(soul => (\n              <p key={soul}>{soul}Hg</p>\n            ))}\n          </div>\n\n          <div className=\"Row\">\n        <h4>WIND DIRECTION</h4>\n            {sol_hours.map(soul => (\n              <p key={soul}>{soul}</p>\n            ))}\n           </div>\n    \n  </center>\n  </div>\n  );\n}\n\nexport default AboutMars;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}